{"version":3,"sources":["contacts/contacts.css","contacts/contacts.scss","../styles/helpers/_mixins-svg.scss"],"names":[],"mappings":"AACA,yBCCA,yBC8EC,QAAA,aACA,iBAAA,uBF7EC,gBAAA,MAAA,MAGF,UCFI,SAAA,SACA,WAAA,qBACA,gBAAA,MALJ,MAAA,KDUE,QAAA,KAAA,EAAA,KAGF,kBACE,SAAA,SACA,QAAA,GACA,IAAA,EACA,KAAA,ECCE,MAAA,KDCF,OAAA,KACA,iBAAA,eACA,QAAA,EAGF,gBACE,QAAA,EACA,iBAAA,EAAA,SAAA,EAAA,KAAA,EAGF,kBACE,cAAA,KAGF,qBACE,MAAA,KACA,UAAA,KACA,YAAA,KAGF,iBCvCA,aAAA,KDyCE,eAAA,IAGF,yBACE,IAAA,IC7CF,kBAAA,cAAA,cAAA,cAAA,UAAA,cD+CE,MAAA,KACA,OAAA,KACA,oBAAA,MAAA,MAGF,iBACE,aAAA,KAGF,yBACE,MAAA,KACA,OAAA,KACA,oBAAA,MAAA,KAGF,gBACE,iBAAA,EAAA,SAAA,EAAA,KAAA,EACA,WAAA,KACA,YAAA,KACA,cAAA,MAGF,yCACE,qBACE,QAAA,MACA,cAAA,KAGF,gBACE,QAAA,MACA,YAAA,EACA,cAAA","file":"../contacts.min.css","sourcesContent":[".contacts .phone::before,\n.contacts .email::before {\n  display: inline-block;\n  background-image: url(\"../img/sprite.svg\");\n  background-size: 127px 102px;\n}\n\n.contacts {\n  position: relative;\n  background: url(\"../img/city.jpg\");\n  background-size: cover;\n  color: #fff;\n  padding: 78px 0 40px;\n}\n\n.contacts::before {\n  position: absolute;\n  content: \"\";\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1;\n}\n\n.contacts__info {\n  z-index: 2;\n  flex: 1;\n}\n\n.contacts__info p {\n  margin-bottom: 75px;\n}\n\n.contacts .link-icon {\n  color: #fff;\n  font-size: 21px;\n  line-height: 29px;\n}\n\n.contacts .phone {\n  margin-right: 30px;\n  letter-spacing: 1px;\n}\n\n.contacts .phone::before {\n  top: 40%;\n  transform: rotate(90deg);\n  width: 19px;\n  height: 10px;\n  background-position: -38px -55px;\n}\n\n.contacts .email {\n  padding-left: 57px;\n}\n\n.contacts .email::before {\n  width: 41px;\n  height: 31px;\n  background-position: -55px -5px;\n}\n\n.contacts .form {\n  flex: 1;\n  margin-top: 54px;\n  margin-left: 27px;\n  margin-bottom: 100px;\n}\n\n@media only screen and (max-width: 991px) {\n  .contacts .link-icon {\n    display: block;\n    margin-bottom: 20px;\n  }\n\n  .contacts .form {\n    display: block;\n    margin-left: 0;\n    margin-bottom: 20px;\n  }\n}","@import \"../../styles/helpers/_helpers\";\r\n\r\n.contacts {\r\n    position: relative;\r\n    background: url(\"../img/city.jpg\");\r\n    background-size: cover;\r\n    color: #fff;\r\n    padding: 78px 0 40px;\r\n    &::before {\r\n        position: absolute;\r\n        content:\"\";\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        background-color: rgba(0, 0, 0, 0.8);\r\n        z-index: 1;\r\n    }\r\n\r\n\r\n    &__info {\r\n        z-index: 2;\r\n        flex: 1;\r\n\r\n        p {\r\n            margin-bottom: 75px;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    .link-icon {\r\n        color: #fff;\r\n        font-size: 21px;\r\n        line-height: 29px;\r\n        @include max-screen(991px) {\r\n            display: block;\r\n            margin-bottom: 20px;\r\n        }\r\n    }\r\n\r\n    .phone {\r\n        margin-right: 30px;\r\n        letter-spacing: 1px;\r\n        &::before {\r\n            top: 40%;\r\n            transform: rotate(90deg);\r\n            @include svgsprite(phone);\r\n        }\r\n    }\r\n\r\n    .email {\r\n        padding-left: 57px;\r\n        &::before {\r\n            @include svgsprite(mail2);\r\n        }\r\n    }\r\n\r\n    .form {\r\n        flex: 1;\r\n        margin-top: 54px;\r\n        margin-left: 27px;\r\n        margin-bottom: 100px;\r\n        @include max-screen(991px) {\r\n            display: block;\r\n            margin-left: 0;\r\n            margin-bottom: 20px;\r\n        }\r\n    }\r\n}\r\n","////\r\n/// @author Mike Street\r\n/// @group Sprite\r\n////\r\n\r\n\r\n// The following variable and function originate from the sass-mq library.\r\n// If you have already included it, you can eliminate the below\r\n// https://github.com/sass-mq/sass-mq/blob/master/_mq.scss\r\n\r\n/// Base font size on the `<body>` element\r\n/// @type Number (unit)\r\n$mq-base-font-size: 16px !default;\r\n\r\n/// Convert pixels to ems\r\n///\r\n/// @param {Number} $px - value to convert\r\n/// @param {Number} $base-font-size ($mq-base-font-size) - `<body>` font size\r\n///\r\n/// @example scss\r\n///  $font-size-in-ems: mq-px2em(16px);\r\n///  p { font-size: mq-px2em(16px); }\r\n///\r\n/// @requires $mq-base-font-size\r\n/// @returns {Number}\r\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\r\n    @if unitless($px) {\r\n        @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\r\n        @return mq-px2em($px + 0px); // That may fail.\r\n    } @else if unit($px) == em {\r\n        @return $px;\r\n    }\r\n    @return $px;\r\n    // @return ($px / $base-font-size) * 1em;\r\n}\r\n\r\n\r\n/// Set the `$sprite` map\r\n/// @group sprite\r\n$sprite: map-get($icons, sprite) !default;\r\n\r\n/// Retrive an attributes value for a specific icon in the sprite map\r\n/// @param {string} $icon - The name of the icon\r\n/// @param {string} $attr - The attribute you wish to retrieve (e.g. width)\r\n@function sprite-attr($icon, $attr) {\r\n\t$newIcon: map-get($icons, $icon);\r\n\t@if $newIcon == null {\r\n\t\t@warn \"Can't find an icon with the name #{$icon}\";\r\n\t}\r\n\t@return map-get($newIcon, $attr);\r\n}\r\n\r\n/// Create a map with the specified icon of attributes\r\n/// @param {string} $icon - The name of the icon\r\n@function icon-attr($icon) {\r\n\t$attr: (\r\n\t\twidth: sprite-attr($icon, width),\r\n\t\theight: sprite-attr($icon, height),\r\n\t\tx: sprite-attr($icon, backgroundX),\r\n\t\ty: sprite-attr($icon, backgroundY)\r\n\t);\r\n\r\n\t@return $attr;\r\n}\r\n\r\n/// Get the width of an icon in em\r\n/// @param {string} $icon - The name of the icon\r\n@function icon_width($icon) {\r\n\t@return mq-px2em(sprite-attr($icon, width));\r\n}\r\n\r\n/// Get the height of an icon in em\r\n/// @param {string} $icon - The name of the icon\r\n@function icon_height($icon) {\r\n\t@return mq-px2em(sprite-attr($icon, height));\r\n}\r\n\r\n/// Assign the correct SVG background image and dimensions to the element\r\n%svgsprite {\r\n\tdisplay: inline-block;\r\n\tbackground-image: url(map-get($sprite, svgPath));\r\n\tbackground-size: mq-px2em(map-get($sprite, width)) mq-px2em(map-get($sprite, height));\r\n}\r\n\r\n\r\n/// Add an SVG sprite icon using em positioning\r\n/// @param {string} $icon - The name of the icon\r\n/// @param {string} $type [all] - The properties wanted (can be `all`, `size` or `bg`).\r\n/// - `all` ensures the icon has the background, position and size.\r\n/// - `size` is just for dimensions\r\n/// - `bg` just  applies the backgrounds to an element\r\n/// @example scss - Usage\r\n/// .class {\r\n/// \t@include sprite(arrow);\r\n/// \t&:hover {\r\n/// \t\t@include sprite(arrowDown, bg)\r\n/// \t}\r\n/// }\r\n///\r\n/// @example css - Output\r\n/// .class {\r\n/// \tdisplay: inline-block;\r\n/// \tbackground-image: url(\"../img/sprite.svg\");\r\n/// \tbackground-size: 34.25em 32.1875em;\r\n/// }\r\n///\r\n///\r\n/// .class {\r\n/// \twidth: 1.3125em;\r\n/// \theight: 1.3125em;\r\n/// \tbackground-position: -0.3125em -0.3125em;\r\n/// }\r\n/// .class:hover {\r\n/// \tbackground-position: -2.25em -2.25em;\r\n/// }\r\n@mixin svgsprite($icon, $type: all) {\r\n\t@if $type == all {\r\n\t\t// Shares the backgrounds\r\n\t\t@extend %svgsprite;\r\n\t}\r\n\r\n\t$iconMap: icon-attr($icon);\r\n\r\n\t// Outputs dimensions in em\r\n\t@if $type == all or $type == size {\r\n\t\twidth: mq-px2em(map-get($iconMap, width) + 1);\r\n\t\theight: mq-px2em(map-get($iconMap, height) + 1);\r\n\t}\r\n\r\n\t// Outputs background position in em\r\n\t@if $type == all or $type == bg {\r\n\t\tbackground-position: mq-px2em(map-get($iconMap, x) - 5) mq-px2em(map-get($iconMap, y) - 5);\r\n\t}\r\n}\r\n"]}